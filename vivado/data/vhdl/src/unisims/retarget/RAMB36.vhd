-------------------------------------------------------------------------------
-- Copyright (c) 1995/2015 Xilinx, Inc.
-- All Right Reserved.
-------------------------------------------------------------------------------
--   ____  ____
--  /   /\/   /
-- /___/  \  /    Vendor      : Xilinx
-- \   \   \/     Version     : 2016.1
--  \   \         Description : Xilinx Functional Simulation Library Component
--  /   /                    32K-Bit Data and 2K-Bit Parity Dual Port Block RAM
-- /___/   /\     Filename    : RAMB36.vhd
-- \   \  /  \
--  \___\/\___\
--
-------------------------------------------------------------------------------
-- Revision:
--    10/25/10 - Initial version.
-- End Revision
-------------------------------------------------------------------------------

----- CELL RAMB36 -----

library IEEE;
use IEEE.STD_LOGIC_1164.all;
use IEEE.STD_LOGIC_SIGNED.all;
use IEEE.STD_LOGIC_ARITH.all;


library UNISIM;
use UNISIM.VPKG.all;
use UNISIM.VCOMPONENTS.all;



entity RAMB36 is

generic (

    DOA_REG : integer := 0;
    DOB_REG : integer := 0;
    INITP_00 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INITP_01 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INITP_02 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INITP_03 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INITP_04 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INITP_05 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INITP_06 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INITP_07 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INITP_08 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INITP_09 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INITP_0A : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INITP_0B : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INITP_0C : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INITP_0D : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INITP_0E : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INITP_0F : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_00 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_01 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_02 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_03 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_04 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_05 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_06 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_07 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_08 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_09 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_0A : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_0B : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_0C : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_0D : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_0E : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_0F : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_10 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_11 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_12 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_13 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_14 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_15 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_16 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_17 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_18 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_19 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_1A : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_1B : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_1C : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_1D : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_1E : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_1F : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_20 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_21 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_22 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_23 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_24 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_25 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_26 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_27 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_28 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_29 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_2A : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_2B : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_2C : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_2D : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_2E : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_2F : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_30 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_31 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_32 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_33 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_34 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_35 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_36 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_37 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_38 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_39 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_3A : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_3B : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_3C : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_3D : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_3E : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_3F : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_40 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_41 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_42 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_43 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_44 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_45 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_46 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_47 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_48 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_49 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_4A : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_4B : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_4C : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_4D : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_4E : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_4F : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_50 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_51 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_52 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_53 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_54 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_55 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_56 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_57 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_58 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_59 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_5A : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_5B : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_5C : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_5D : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_5E : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_5F : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_60 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_61 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_62 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_63 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_64 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_65 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_66 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_67 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_68 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_69 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_6A : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_6B : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_6C : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_6D : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_6E : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_6F : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_70 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_71 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_72 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_73 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_74 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_75 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_76 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_77 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_78 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_79 : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_7A : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_7B : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_7C : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_7D : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_7E : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_7F : bit_vector := X"0000000000000000000000000000000000000000000000000000000000000000";
    INIT_A : bit_vector := X"000000000";
    INIT_B : bit_vector := X"000000000";
    INIT_FILE : string := "NONE";
    RAM_EXTENSION_A : string := "NONE";
    RAM_EXTENSION_B : string := "NONE";
    READ_WIDTH_A : integer := 0;
    READ_WIDTH_B : integer := 0;
    SIM_COLLISION_CHECK : string := "ALL";
    SIM_MODE : string := "SAFE";
    SRVAL_A : bit_vector := X"000000000";
    SRVAL_B : bit_vector := X"000000000";
    WRITE_MODE_A : string := "WRITE_FIRST";
    WRITE_MODE_B : string := "WRITE_FIRST";
    WRITE_WIDTH_A : integer := 0;
    WRITE_WIDTH_B : integer := 0
    
  );

port (
    CASCADEOUTLATA : out std_ulogic;
    CASCADEOUTLATB : out std_ulogic;
    CASCADEOUTREGA : out std_ulogic;
    CASCADEOUTREGB : out std_ulogic;
    DOA : out std_logic_vector(31 downto 0);
    DOB : out std_logic_vector(31 downto 0);
    DOPA : out std_logic_vector(3 downto 0);
    DOPB : out std_logic_vector(3 downto 0);
    
    ADDRA : in std_logic_vector(15 downto 0);
    ADDRB : in std_logic_vector(15 downto 0);
    CASCADEINLATA : in std_ulogic;
    CASCADEINLATB : in std_ulogic;
    CASCADEINREGA : in std_ulogic;
    CASCADEINREGB : in std_ulogic;
    CLKA : in std_ulogic;
    CLKB : in std_ulogic;
    DIA : in std_logic_vector(31 downto 0);
    DIB : in std_logic_vector(31 downto 0);
    DIPA : in std_logic_vector(3 downto 0);
    DIPB : in std_logic_vector(3 downto 0);
    ENA : in std_ulogic;
    ENB : in std_ulogic;
    REGCEA : in std_ulogic;
    REGCEB : in std_ulogic;
    SSRA : in std_ulogic;
    SSRB : in std_ulogic;
    WEA : in std_logic_vector(3 downto 0);
    WEB : in std_logic_vector(3 downto 0)
  );
end RAMB36;


architecture RAMB36_V of RAMB36 is
signal WEB_BUS : std_logic_vector(7 downto 0);
signal cascadeina, cascadeinb : std_ulogic;
signal rstrama_val, rstramb_val : std_ulogic;
begin
  WEB_BUS <= "0000" & WEB(3 downto 0);
  cascadeina <= CASCADEINREGA when (DOA_REG = 1) else CASCADEINLATA;
  cascadeinb <= CASCADEINREGB when (DOB_REG = 1) else CASCADEINLATB;
  rstrama_val <= '0' when (DOA_REG = 1) else SSRA;
  rstramb_val <= '0' when (DOB_REG = 1) else SSRB;
  R1 : RAMB36E1
    generic map (
      DOA_REG => DOA_REG,
      DOB_REG => DOB_REG,
      INIT_A => INIT_A,
      INIT_B => INIT_B,
      INIT_FILE => INIT_FILE,
      RAM_EXTENSION_A => RAM_EXTENSION_A,
      RAM_EXTENSION_B => RAM_EXTENSION_B,
      SRVAL_A => SRVAL_A,
      SRVAL_B => SRVAL_B,
      WRITE_MODE_A => WRITE_MODE_A,
      WRITE_MODE_B => WRITE_MODE_B,
      READ_WIDTH_A => READ_WIDTH_A,
      READ_WIDTH_B => READ_WIDTH_B,
      WRITE_WIDTH_A => WRITE_WIDTH_A,
      WRITE_WIDTH_B => WRITE_WIDTH_B,
      SIM_COLLISION_CHECK => SIM_COLLISION_CHECK,
      SIM_DEVICE => "VIRTEX6",
      RSTREG_PRIORITY_A => "REGCE",
      RSTREG_PRIORITY_B => "REGCE",
      INIT_00 => INIT_00, 
      INIT_01 => INIT_01, 
      INIT_02 => INIT_02, 
      INIT_03 => INIT_03, 
      INIT_04 => INIT_04, 
      INIT_05 => INIT_05, 
      INIT_06 => INIT_06, 
      INIT_07 => INIT_07, 
      INIT_08 => INIT_08, 
      INIT_09 => INIT_09, 
      INIT_0A => INIT_0A, 
      INIT_0B => INIT_0B, 
      INIT_0C => INIT_0C, 
      INIT_0D => INIT_0D, 
      INIT_0E => INIT_0E, 
      INIT_0F => INIT_0F, 
      INIT_10 => INIT_10, 
      INIT_11 => INIT_11, 
      INIT_12 => INIT_12, 
      INIT_13 => INIT_13, 
      INIT_14 => INIT_14, 
      INIT_15 => INIT_15, 
      INIT_16 => INIT_16, 
      INIT_17 => INIT_17, 
      INIT_18 => INIT_18, 
      INIT_19 => INIT_19, 
      INIT_1A => INIT_1A, 
      INIT_1B => INIT_1B, 
      INIT_1C => INIT_1C, 
      INIT_1D => INIT_1D, 
      INIT_1E => INIT_1E, 
      INIT_1F => INIT_1F, 
      INIT_20 => INIT_20, 
      INIT_21 => INIT_21, 
      INIT_22 => INIT_22, 
      INIT_23 => INIT_23, 
      INIT_24 => INIT_24, 
      INIT_25 => INIT_25, 
      INIT_26 => INIT_26, 
      INIT_27 => INIT_27, 
      INIT_28 => INIT_28, 
      INIT_29 => INIT_29, 
      INIT_2A => INIT_2A, 
      INIT_2B => INIT_2B, 
      INIT_2C => INIT_2C, 
      INIT_2D => INIT_2D, 
      INIT_2E => INIT_2E, 
      INIT_2F => INIT_2F, 
      INIT_30 => INIT_30, 
      INIT_31 => INIT_31, 
      INIT_32 => INIT_32, 
      INIT_33 => INIT_33, 
      INIT_34 => INIT_34, 
      INIT_35 => INIT_35, 
      INIT_36 => INIT_36, 
      INIT_37 => INIT_37, 
      INIT_38 => INIT_38,
      INIT_39 => INIT_39, 
      INIT_3A => INIT_3A, 
      INIT_3B => INIT_3B, 
      INIT_3C => INIT_3C, 
      INIT_3D => INIT_3D, 
      INIT_3E => INIT_3E, 
      INIT_3F => INIT_3F, 
      INIT_40 => INIT_40, 
      INIT_41 => INIT_41, 
      INIT_42 => INIT_42, 
      INIT_43 => INIT_43, 
      INIT_44 => INIT_44, 
      INIT_45 => INIT_45, 
      INIT_46 => INIT_46, 
      INIT_47 => INIT_47, 
      INIT_48 => INIT_48,
      INIT_49 => INIT_49, 
      INIT_4A => INIT_4A, 
      INIT_4B => INIT_4B, 
      INIT_4C => INIT_4C, 
      INIT_4D => INIT_4D, 
      INIT_4E => INIT_4E, 
      INIT_4F => INIT_4F, 
      INIT_50 => INIT_50, 
      INIT_51 => INIT_51, 
      INIT_52 => INIT_52, 
      INIT_53 => INIT_53, 
      INIT_54 => INIT_54, 
      INIT_55 => INIT_55, 
      INIT_56 => INIT_56, 
      INIT_57 => INIT_57, 
      INIT_58 => INIT_58,
      INIT_59 => INIT_59, 
      INIT_5A => INIT_5A, 
      INIT_5B => INIT_5B, 
      INIT_5C => INIT_5C, 
      INIT_5D => INIT_5D, 
      INIT_5E => INIT_5E, 
      INIT_5F => INIT_5F,
      INIT_60 => INIT_60, 
      INIT_61 => INIT_61, 
      INIT_62 => INIT_62, 
      INIT_63 => INIT_63, 
      INIT_64 => INIT_64, 
      INIT_65 => INIT_65, 
      INIT_66 => INIT_66, 
      INIT_67 => INIT_67, 
      INIT_68 => INIT_68,
      INIT_69 => INIT_69, 
      INIT_6A => INIT_6A, 
      INIT_6B => INIT_6B, 
      INIT_6C => INIT_6C, 
      INIT_6D => INIT_6D, 
      INIT_6E => INIT_6E, 
      INIT_6F => INIT_6F,
      INIT_70 => INIT_70, 
      INIT_71 => INIT_71, 
      INIT_72 => INIT_72, 
      INIT_73 => INIT_73, 
      INIT_74 => INIT_74, 
      INIT_75 => INIT_75, 
      INIT_76 => INIT_76, 
      INIT_77 => INIT_77, 
      INIT_78 => INIT_78,
      INIT_79 => INIT_79, 
      INIT_7A => INIT_7A, 
      INIT_7B => INIT_7B, 
      INIT_7C => INIT_7C, 
      INIT_7D => INIT_7D, 
      INIT_7E => INIT_7E, 
      INIT_7F => INIT_7F,
      INITP_00 => INITP_00, 
      INITP_01 => INITP_01, 
      INITP_02 => INITP_02, 
      INITP_03 => INITP_03, 
      INITP_04 => INITP_04, 
      INITP_05 => INITP_05, 
      INITP_06 => INITP_06, 
      INITP_07 => INITP_07,
      INITP_08 => INITP_08, 
      INITP_09 => INITP_09, 
      INITP_0A => INITP_0A, 
      INITP_0B => INITP_0B, 
      INITP_0C => INITP_0C, 
      INITP_0D => INITP_0D, 
      INITP_0E => INITP_0E, 
      INITP_0F => INITP_0F
    ) port map (   
      CASCADEOUTA => CASCADEOUTLATA, 
      CASCADEOUTB => CASCADEOUTLATB, 
      DBITERR => open, 
      SBITERR => open, 
      DOADO => DOA, 
      DOBDO => DOB, 
      DOPADOP => DOPA, 
      DOPBDOP => DOPB, 
      ECCPARITY => open, 
      RDADDRECC => open, 
      ADDRARDADDR => ADDRA, 
      ADDRBWRADDR => ADDRB, 
      CASCADEINA => cascadeina, 
      CASCADEINB => cascadeinb, 
      CLKARDCLK => CLKA, 
      CLKBWRCLK => CLKB, 
      DIADI => DIA, 
      DIBDI => DIB, 
      DIPADIP => DIPA, 
      DIPBDIP => DIPB, 
      ENARDEN => ENA, 
      ENBWREN => ENB, 
      INJECTDBITERR => '0', 
      INJECTSBITERR => '0', 
      REGCEAREGCE => REGCEA, 
      REGCEB => REGCEB, 
      RSTRAMARSTRAM => rstrama_val, 
      RSTRAMB => rstramb_val, 
      RSTREGARSTREG => SSRA,
      RSTREGB => SSRB,
      WEA => WEA,
      WEBWE => WEB_BUS
    );
end RAMB36_V;
